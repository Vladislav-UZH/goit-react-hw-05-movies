{"version":3,"file":"static/js/801.7ec7cad5.chunk.js","mappings":"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","sources":["Helpers/fetchApi.js","components/Button/Button.styled.js","components/Button/Button.jsx","components/SearchMovieBox/SearchMovieBox.styled.js","components/SearchMovieBox/SearchMovieBox.jsx","Pages/Movies.jsx","components/Image/Image.styled.js","components/Image/Image.jsx","components/MovieList/MovieItem/MovieItem.styled.js","components/MovieList/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","jsStyledRoot/styledRoot.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '76cbb606f190fc237086ec33f1fd98a3';\nconst fetchDayTrend = async options => {\n  const resp = await axios.get(`trending/movie/day?api_key=${apiKey}`, options);\n  return resp.data;\n};\nconst fetchMovieByQuery = async (query, options) => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`,\n    options\n  );\n  return resp.data;\n};\nconst fetchMovieDetsById = async (id, detailEndpoint = '', options) => {\n  const resp = await axios.get(\n    `movie/${id}${detailEndpoint}?api_key=${apiKey}&language=en-US`,\n    options\n  );\n  return resp.data;\n};\nexport { fetchDayTrend, fetchMovieByQuery, fetchMovieDetsById };\n","import styled from 'styled-components';\nconst ButtonStyled = styled.button`\n  ${({ variant }) => {\n    // console.log(variant);\n  }}\n`;\nexport { ButtonStyled };\n","import PropTypes from 'prop-types';\nimport { ButtonStyled } from './Button.styled';\nconst Button = ({\n  type = 'button',\n  text = 'Search',\n  variant = 'default',\n  children,\n}) => {\n  return (\n    <ButtonStyled type={type} variant={variant}>\n      {text} {children}\n    </ButtonStyled>\n  );\n};\nButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string,\n  variant: PropTypes.string.isRequired,\n};\nexport default Button;\n","import { root } from 'jsStyledRoot/styledRoot';\nimport styled from 'styled-components';\nconst Form = styled.form`\n  display: flex;\n\n  gap: 15px;\n  padding: 50px 15px;\n  background-color: ${root.mainElementBg};\n`;\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\nconst Input = styled.input`\n  padding: 5px 10px;\n  height: 35px;\n  border: none;\n  border-radius: 10px;\n  font-size: 16px;\n  color: ${root.subTextColor};\n  background-color: ${root.subElementBg};\n  &:focus {\n    outline: 1px solid ${root.orange};\n  }\n`;\nexport { Form, Input, Label };\n","import Button from 'components/Button';\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Form, Input, Label } from './SearchMovieBox.styled';\n\nconst SearchMovieBox = ({ searchParams, onSubmit }) => {\n  const [query, setQuery] = useState('');\n  const searchMovieName = searchParams.get('name') ?? '';\n  useEffect(() => {\n    setQuery(searchMovieName);\n  }, [searchMovieName]);\n  const handleChange = ({ target: { value } }) => {\n    setQuery(value);\n  };\n  const handleFocus = e => {\n    e.target.select();\n  };\n  return (\n    <Form\n      onSubmit={e => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        const value = form.elements.movieName.value;\n        // console.log(form.elements);\n        return onSubmit(value);\n      }}\n    >\n      <Label>\n        Enter name of your movie\n        <Input\n          name=\"movieName\"\n          type=\"text\"\n          placeholder=\"Enter the movie name\"\n          onChange={handleChange}\n          onFocus={handleFocus}\n          autoComplete=\"true\"\n          value={query}\n        />\n      </Label>\n      <Button type=\"submit\" variant=\"default\" text=\"Search\" />\n    </Form>\n  );\n};\nSearchMovieBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default SearchMovieBox;\n","import Loader from 'components/Loader';\nimport MovieList from 'components/MovieList';\nimport SearchMovieBox from 'components/SearchMovieBox';\nimport { fetchMovieByQuery } from 'Helpers/fetchApi';\n// import toast, { Toaster } from 'react-hot-toast';\n\n// import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  // console.log(searchParams);\n  const updateQueryString = name => {\n    const nextParams = !name ? {} : { name };\n    setSearchParams(nextParams);\n  };\n  // useEffect(() => {\n  const getMovieByName = async name => {\n    try {\n      setIsLoading(true);\n      if (!name) {\n        //   toast.error('Enter the movie name!');\n        //   return <Toaster />;\n        return;\n      }\n      updateQueryString(name);\n      const serialized = name.toLowerCase().trim();\n      const resp = await fetchMovieByQuery(serialized);\n      setMovies(resp.results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  //   getMovieByName();\n  // },[searchParams]);\n\n  return (\n    <>\n      <SearchMovieBox searchParams={searchParams} onSubmit={getMovieByName} />\n      {isLoading ? <Loader /> : <MovieList movies={movies} />}\n    </>\n  );\n};\nexport default Movies;\n","import styled from 'styled-components';\nconst Thumb = styled.div`\n  margin: 0;\n  /* width: 100%; */\n  ${({ size: { width, height } }) => {\n    return `\n    min-width: ${width}px;\n    width: ${width}px;\n    height: ${height}px;`;\n  }}\n`;\nexport { Thumb };\n","import PropTypes from 'prop-types';\nimport { Thumb } from './Image.styled';\nconst Image = ({ imgLink, alt, size }) => {\n  const { width, height } = size;\n  const BASE_LINK = 'https://image.tmdb.org/t/p/w400';\n  const plug = `https://via.placeholder.com/${width}x${height}?text=Image+not+found`;\n  return (\n    <Thumb size={size}>\n      <img\n        src={imgLink ? `${BASE_LINK}${imgLink}` : plug}\n        alt={alt}\n        loading=\"lazy\"\n      />\n    </Thumb>\n  );\n};\nImage.propTypes = {\n  imgLink: PropTypes.string,\n  alt: PropTypes.string.isRequired,\n  size: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n  }).isRequired,\n};\nexport default Image;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n// const items = 3;\n// const indent = '20px';\nconst Item = styled.li``;\n// flex-basis: calc((100% - ${indent} * ${items} - 1) / ${items});\nconst Thumb = styled.div`\n  margin: 0;\n  width: 365px;\n  height: 450px;\n`;\nconst MovieLink = styled(NavLink)`\n  &:hover,\n  :focus {\n    transform: scale(1.2);\n  }\n`;\nconst FilmWrapper = styled.div`\n  display: flex;\n  /* justify-content: center; */\n  align-items: center;\n  /* min-height: calc(106px - 40px); */\n  padding: 20px 20px;\n  border-radius: 0 0 10px 10px;\n  background-color: #32343b;\n`;\nconst Title = styled.p`\n  max-width: calc(365px - 40px);\n  font-size: 18px;\n  font-weight: 600;\n  color: #e2580a;\n`;\nexport { Thumb, Item, FilmWrapper, Title, MovieLink };\n","import Image from 'components/Image';\nimport { useLocation } from 'react-router-dom';\nimport { Item, FilmWrapper, Title, MovieLink } from './MovieItem.styled';\nconst MovieItem = ({ poster, title, id }) => {\n  const location = useLocation();\n  return (\n    <Item>\n      <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n        <Image\n          imgLink={poster}\n          alt={title}\n          size={{ width: 365, height: 450 }}\n        />\n\n        <FilmWrapper>\n          <Title>\"{title}\"</Title>\n        </FilmWrapper>\n      </MovieLink>\n    </Item>\n  );\n};\nexport default MovieItem;\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 20px;\n  row-gap: 40px;\n  justify-content: center;\n`;\nexport { List };\n","import PropTypes from 'prop-types';\nimport MovieItem from './MovieItem';\nimport { List } from './MovieList.styled';\nconst MovieList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(({ poster_path, id, overview, title }) => {\n        return (\n          <MovieItem key={id} id={id} poster={poster_path} title={title} />\n        );\n      })}\n    </List>\n  );\n};\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\nexport default MovieList;\n","export const root = {\n  bodyBgColor: '#22232b',\n  mainElementBg: '#32343b',\n  subElementBg: '#50535C',\n  orange: '#e2580a',\n  text: '#DBD7D7',\n  subTextColor: '#ffffff',\n  globalAnim: `cubic-bezier(.06,.57,.52,.97) 300ms`,\n};\n"],"names":["axios","apiKey","fetchDayTrend","options","resp","data","fetchMovieByQuery","query","fetchMovieDetsById","id","detailEndpoint","ButtonStyled","styled","variant","type","text","children","Form","root","Label","Input","searchParams","onSubmit","useState","setQuery","searchMovieName","get","useEffect","e","preventDefault","value","currentTarget","elements","movieName","name","placeholder","onChange","target","onFocus","select","autoComplete","movies","setMovies","isLoading","setIsLoading","useSearchParams","setSearchParams","updateQueryString","getMovieByName","serialized","toLowerCase","trim","results","console","log","Loader","MovieList","Thumb","size","width","height","imgLink","alt","plug","src","loading","Item","MovieLink","NavLink","FilmWrapper","Title","poster","title","location","useLocation","to","state","from","Image","List","map","poster_path","overview","bodyBgColor","mainElementBg","subElementBg","orange","subTextColor","globalAnim"],"sourceRoot":""}