{"version":3,"file":"static/js/6.e65ea996.chunk.js","mappings":"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","sources":["Helpers/fetchApi.js","Pages/Home.jsx","components/Image/Image.styled.js","components/Image/Image.jsx","components/MovieList/MovieItem/MovieItem.styled.js","components/MovieList/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '76cbb606f190fc237086ec33f1fd98a3';\nconst fetchDayTrend = async options => {\n  const resp = await axios.get(`trending/movie/day?api_key=${apiKey}`, options);\n  return resp.data;\n};\nconst fetchMovieByQuery = async (query, options) => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`,\n    options\n  );\n  return resp.data;\n};\nconst fetchMovieDetsById = async (id, detailEndpoint = '', options) => {\n  const resp = await axios.get(\n    `movie/${id}${detailEndpoint}?api_key=${apiKey}&language=en-US`,\n    options\n  );\n  return resp.data;\n};\nexport { fetchDayTrend, fetchMovieByQuery, fetchMovieDetsById };\n","import Loader from 'components/Loader';\n// import Notification from 'components/Notification';\nimport TrendingList from 'components/MovieList';\nimport { fetchDayTrend } from 'Helpers/fetchApi';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const getTrendingMovies = async () => {\n      try {\n        setIsLoading(true);\n        const resp = await fetchDayTrend();\n        setMovies(resp.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      {isLoading ? <Loader /> : <TrendingList movies={movies} />}\n\n      {/* {true && <Loader />}\n        {!!movies.length ? (\n          <TrendingList movies={movies} />\n        ) : (\n          <Notification title=\"Nothing here.. Try again later!\" />\n        )} */}\n    </>\n  );\n};\nexport default Home;\n","import styled from 'styled-components';\nconst Thumb = styled.div`\n  margin: 0;\n  /* width: 100%; */\n  ${({ size: { width, height } }) => {\n    return `\n    min-width: ${width}px;\n    width: ${width}px;\n    height: ${height}px;`;\n  }}\n`;\nexport { Thumb };\n","import PropTypes from 'prop-types';\nimport { Thumb } from './Image.styled';\nconst Image = ({ imgLink, alt, size }) => {\n  const { width, height } = size;\n  const BASE_LINK = 'https://image.tmdb.org/t/p/w400';\n  const plug = `https://via.placeholder.com/${width}x${height}?text=Image+not+found`;\n  return (\n    <Thumb size={size}>\n      <img\n        src={imgLink ? `${BASE_LINK}${imgLink}` : plug}\n        alt={alt}\n        loading=\"lazy\"\n      />\n    </Thumb>\n  );\n};\nImage.propTypes = {\n  imgLink: PropTypes.string,\n  alt: PropTypes.string.isRequired,\n  size: PropTypes.shape({\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n  }).isRequired,\n};\nexport default Image;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n// const items = 3;\n// const indent = '20px';\nconst Item = styled.li``;\n// flex-basis: calc((100% - ${indent} * ${items} - 1) / ${items});\nconst Thumb = styled.div`\n  margin: 0;\n  width: 365px;\n  height: 450px;\n`;\nconst MovieLink = styled(NavLink)`\n  &:hover,\n  :focus {\n    transform: scale(1.2);\n  }\n`;\nconst FilmWrapper = styled.div`\n  display: flex;\n  /* justify-content: center; */\n  align-items: center;\n  /* min-height: calc(106px - 40px); */\n  padding: 20px 20px;\n  border-radius: 0 0 10px 10px;\n  background-color: #32343b;\n`;\nconst Title = styled.p`\n  max-width: calc(365px - 40px);\n  font-size: 18px;\n  font-weight: 600;\n  color: #e2580a;\n`;\nexport { Thumb, Item, FilmWrapper, Title, MovieLink };\n","import Image from 'components/Image';\nimport PropTypes from 'prop-types';\n\nimport { useLocation } from 'react-router-dom';\nimport { Item, FilmWrapper, Title, MovieLink } from './MovieItem.styled';\nconst MovieItem = ({ poster, title, id }) => {\n  const location = useLocation();\n  return (\n    <Item>\n      <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n        <Image\n          imgLink={poster}\n          alt={title}\n          size={{ width: 365, height: 450 }}\n        />\n\n        <FilmWrapper>\n          <Title>\"{title}\"</Title>\n        </FilmWrapper>\n      </MovieLink>\n    </Item>\n  );\n};\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\nexport default MovieItem;\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 20px;\n  row-gap: 40px;\n  justify-content: center;\n`;\nexport { List };\n","import PropTypes from 'prop-types';\nimport MovieItem from './MovieItem';\nimport { List } from './MovieList.styled';\nconst MovieList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(({ poster_path, id, overview, title }) => {\n        return (\n          <MovieItem key={id} id={id} poster={poster_path} title={title} />\n        );\n      })}\n    </List>\n  );\n};\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\nexport default MovieList;\n"],"names":["axios","apiKey","fetchDayTrend","options","resp","data","fetchMovieByQuery","query","fetchMovieDetsById","id","detailEndpoint","useState","movies","setMovies","isLoading","setIsLoading","useEffect","getTrendingMovies","results","console","log","Thumb","styled","size","width","height","imgLink","alt","plug","src","loading","Item","MovieLink","NavLink","FilmWrapper","Title","poster","title","location","useLocation","to","state","from","Image","List","map","poster_path","overview"],"sourceRoot":""}