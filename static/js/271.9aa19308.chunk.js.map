{"version":3,"file":"static/js/271.9aa19308.chunk.js","mappings":"mQACAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCACTC,EAAa,mCAAG,WAAMC,GAAN,uFACDH,EAAAA,EAAAA,IAAA,qCAAwCC,GAAUE,GADjD,cACdC,EADc,yBAEbA,EAAKC,MAFQ,2CAAH,sDAIbC,EAAiB,mCAAG,WAAOC,EAAOJ,GAAd,uFACLH,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCM,EADtC,+BAEjBJ,GAHsB,cAClBC,EADkB,yBAKjBA,EAAKC,MALY,2CAAH,wDAOjBG,EAAkB,mCAAG,WAAOC,GAAP,8FAAWC,EAAX,+BAA4B,GAAIP,EAAhC,gCACNH,EAAAA,EAAAA,IAAA,gBACRS,GADQ,OACHC,EADG,oBACuBT,EADvB,mBAEjBE,GAHuB,cACnBC,EADmB,yBAKlBA,EAAKC,MALa,2CAAH,qD,kICRxB,EAJiB,SAAC,GAAsB,IAApBM,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SACtB,OAAO,SAAC,KAAD,CAASD,GAAIA,EAAb,SAAkBC,GAC1B,E,6BCkED,EAjEqB,SAAC,GAMf,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,aACAC,EACI,EADJA,cAOA,OACE,4BACE,gBAAKC,MAAO,CAAEC,MAAO,KAArB,UACE,gBACEC,IAAG,0CAAqCH,GACxCI,IAAKR,OAGT,4BACE,wBAAKA,KACL,2CAEE,yBAjByB,SAAAS,GAC/B,IAAMC,EAASC,QAAsB,GAAdF,GAAkBG,QAAQ,IAEjD,OADiBC,OAAOH,EAEzB,CAaWI,CAAyBX,GAA7B,YAEF,4BACE,sCACA,uBAAID,QAEN,4BACE,oCACA,wBACGD,EAAOc,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,KAAMpB,EAAS,EAATA,GACnB,OAAO,wBAAcoB,GAALpB,EACjB,aAKP,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAASE,GAAE,OAAX,qBAEF,yBACE,SAAC,KAAD,CAASA,GAAE,UAAX,2BAGJ,SAAC,EAAAmB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,CAAcnB,MAAM,cAAxC,UACE,SAAC,KAAD,WAKT,E,UCjBD,EArCqB,WAAO,IAAD,IACzB,GAAwCoB,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IACvCC,GAASC,EAAAA,EAAAA,QAAOL,GAiBtB,OAfAM,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACjBC,EAAS,CAAEC,OAAQH,EAAWG,QAC9BC,EAAe,mCAAG,8GAEDzC,EAAAA,EAAAA,IAAmB4B,EAASW,GAF3B,OAEd3C,EAFc,OAGpB+B,EAAgB/B,GAHI,gDAKpB8C,QAAQC,IAAR,MALoB,yDAAH,qDASrB,OADAF,IACO,kBAAMJ,EAAWO,OAAjB,CACR,GAAE,CAAChB,KAGF,iCACE,SAAC,EAAD,CAAUzB,GAAI+B,EAAOW,QAArB,qBACCnB,IACC,SAAC,EAAD,CACErB,MAAOqB,EAAarB,MACpBC,OAAQoB,EAAapB,OACrBC,SAAUmB,EAAanB,SACvBC,aAAckB,EAAalB,aAC3BC,cAAeiB,EAAajB,kBAKrC,C","sources":["Helpers/fetchApi.js","components/BackLink/BackLink.jsx","components/DetailedInfo/DetailedInfo.jsx","Pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '76cbb606f190fc237086ec33f1fd98a3';\nconst fetchDayTrend = async options => {\n  const resp = await axios.get(`trending/movie/day?api_key=${apiKey}`, options);\n  return resp.data;\n};\nconst fetchMovieByQuery = async (query, options) => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`,\n    options\n  );\n  return resp.data;\n};\nconst fetchMovieDetsById = async (id, detailEndpoint = '', options) => {\n  const resp = await axios.get(\n    `movie/${id}${detailEndpoint}?api_key=${apiKey}&language=en-US`,\n    options\n  );\n  return resp.data;\n};\nexport { fetchDayTrend, fetchMovieByQuery, fetchMovieDetsById };\n","// import PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nconst BackLink = ({ to, children }) => {\n  return <NavLink to={to}>{children}</NavLink>;\n};\nBackLink.propTypes = {};\nexport default BackLink;\n","import { NavLink, Outlet } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { Suspense } from 'react';\nimport Notification from 'components/Notification';\nconst DetailedInfo = ({\n  title,\n  genres,\n  overview,\n  vote_average,\n  backdrop_path,\n}) => {\n  const getAveragePercentageVote = averageVote => {\n    const result = Number((averageVote * 10).toFixed(1));\n    const stringed = String(result);\n    return stringed;\n  };\n  return (\n    <div>\n      <div style={{ width: 400 }}>\n        <img\n          src={`https://image.tmdb.org/t/p/w400/${backdrop_path}`}\n          alt={title}\n        />\n      </div>\n      <div>\n        <h2>{title}</h2>\n        <span>\n          User score:\n          <p>{getAveragePercentageVote(vote_average)} %</p>\n        </span>\n        <div>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n        </div>\n        <div>\n          <h4>Genres</h4>\n          <ul>\n            {genres.map(({ name, id }) => {\n              return <li key={id}>{name}</li>;\n            })}\n          </ul>\n        </div>\n      </div>\n\n      <div>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <NavLink to={`cast`}>Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to={`reviews`}>Reviews</NavLink>\n          </li>\n        </ul>\n        <Suspense fallback={<Notification title=\"Loading..\" />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nDetailedInfo.propTypes = {\n  title: PropTypes.string.isRequired,\n  genres: PropTypes.array.isRequired,\n  overview: PropTypes.string.isRequired,\n  vote_average: PropTypes.number.isRequired,\n  backdrop_path: PropTypes.string.isRequired,\n};\nexport default DetailedInfo;\n","import BackLink from 'components/BackLink';\nimport DetailedInfo from 'components/DetailedInfo';\nimport { fetchMovieDetsById } from 'Helpers/fetchApi';\nimport { useEffect, useRef } from 'react';\nimport { useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const locRef = useRef(backLinkHref);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const option = { signal: controller.signal };\n    const getMovieDetails = async () => {\n      try {\n        const resp = await fetchMovieDetsById(movieId, option);\n        setMovieDetails(resp);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovieDetails();\n    return () => controller.abort();\n  }, [movieId]);\n\n  return (\n    <>\n      <BackLink to={locRef.current}>Go Back</BackLink>\n      {movieDetails && (\n        <DetailedInfo\n          title={movieDetails.title}\n          genres={movieDetails.genres}\n          overview={movieDetails.overview}\n          vote_average={movieDetails.vote_average}\n          backdrop_path={movieDetails.backdrop_path}\n        />\n      )}\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["axios","apiKey","fetchDayTrend","options","resp","data","fetchMovieByQuery","query","fetchMovieDetsById","id","detailEndpoint","to","children","title","genres","overview","vote_average","backdrop_path","style","width","src","alt","averageVote","result","Number","toFixed","String","getAveragePercentageVote","map","name","Suspense","fallback","Notification","useState","movieDetails","setMovieDetails","movieId","useParams","backLinkHref","useLocation","state","from","locRef","useRef","useEffect","controller","AbortController","option","signal","getMovieDetails","console","log","abort","current"],"sourceRoot":""}